// Autogenerated from Pigeon (v22.4.2), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#ifndef PIGEON_DEBUG_SERVICE_G_H_
#define PIGEON_DEBUG_SERVICE_G_H_

#include <flutter_linux/flutter_linux.h>

G_BEGIN_DECLS

G_DECLARE_FINAL_TYPE(GobjdebugDebugServiceHostApiResponseHandle, gobjdebug_debug_service_host_api_response_handle, GOBJDEBUG, DEBUG_SERVICE_HOST_API_RESPONSE_HANDLE, GObject)

/**
 * GobjdebugDebugServiceHostApiVTable:
 *
 * Table of functions exposed by DebugServiceHostApi to be implemented by the API provider.
 */
typedef struct
{
  void (*get_hostname)(GobjdebugDebugServiceHostApiResponseHandle *response_handle, gpointer user_data);
} GobjdebugDebugServiceHostApiVTable;

/**
 * gobjdebug_debug_service_host_api_set_method_handlers:
 *
 * @messenger: an #FlBinaryMessenger.
 * @suffix: (allow-none): a suffix to add to the API or %NULL for none.
 * @vtable: implementations of the methods in this API.
 * @user_data: (closure): user data to pass to the functions in @vtable.
 * @user_data_free_func: (allow-none): a function which gets called to free @user_data, or %NULL.
 *
 * Connects the method handlers in the DebugServiceHostApi API.
 */
void gobjdebug_debug_service_host_api_set_method_handlers(FlBinaryMessenger *messenger, const gchar *suffix, const GobjdebugDebugServiceHostApiVTable *vtable, gpointer user_data, GDestroyNotify user_data_free_func);

/**
 * gobjdebug_debug_service_host_api_clear_method_handlers:
 *
 * @messenger: an #FlBinaryMessenger.
 * @suffix: (allow-none): a suffix to add to the API or %NULL for none.
 *
 * Clears the method handlers in the DebugServiceHostApi API.
 */
void gobjdebug_debug_service_host_api_clear_method_handlers(FlBinaryMessenger *messenger, const gchar *suffix);

/**
 * gobjdebug_debug_service_host_api_respond_get_hostname:
 * @response_handle: a #GobjdebugDebugServiceHostApiResponseHandle.
 * @return_value: location to write the value returned by this method.
 *
 * Responds to DebugServiceHostApi.getHostname.
 */
void gobjdebug_debug_service_host_api_respond_get_hostname(GobjdebugDebugServiceHostApiResponseHandle *response_handle, const gchar *return_value);

/**
 * gobjdebug_debug_service_host_api_respond_error_get_hostname:
 * @response_handle: a #GobjdebugDebugServiceHostApiResponseHandle.
 * @code: error code.
 * @message: error message.
 * @details: (allow-none): error details or %NULL.
 *
 * Responds with an error to DebugServiceHostApi.getHostname.
 */
void gobjdebug_debug_service_host_api_respond_error_get_hostname(GobjdebugDebugServiceHostApiResponseHandle *response_handle, const gchar *code, const gchar *message, FlValue *details);

G_DECLARE_FINAL_TYPE(GobjdebugDebugServiceFlutterApiGetHostnameResponse, gobjdebug_debug_service_flutter_api_get_hostname_response, GOBJDEBUG, DEBUG_SERVICE_FLUTTER_API_GET_HOSTNAME_RESPONSE, GObject)

/**
 * gobjdebug_debug_service_flutter_api_get_hostname_response_is_error:
 * @response: a #GobjdebugDebugServiceFlutterApiGetHostnameResponse.
 *
 * Checks if a response to DebugServiceFlutterApi.getHostname is an error.
 *
 * Returns: a %TRUE if this response is an error.
 */
gboolean gobjdebug_debug_service_flutter_api_get_hostname_response_is_error(GobjdebugDebugServiceFlutterApiGetHostnameResponse *response);

/**
 * gobjdebug_debug_service_flutter_api_get_hostname_response_get_error_code:
 * @response: a #GobjdebugDebugServiceFlutterApiGetHostnameResponse.
 *
 * Get the error code for this response.
 *
 * Returns: an error code or %NULL if not an error.
 */
const gchar *gobjdebug_debug_service_flutter_api_get_hostname_response_get_error_code(GobjdebugDebugServiceFlutterApiGetHostnameResponse *response);

/**
 * gobjdebug_debug_service_flutter_api_get_hostname_response_get_error_message:
 * @response: a #GobjdebugDebugServiceFlutterApiGetHostnameResponse.
 *
 * Get the error message for this response.
 *
 * Returns: an error message.
 */
const gchar *gobjdebug_debug_service_flutter_api_get_hostname_response_get_error_message(GobjdebugDebugServiceFlutterApiGetHostnameResponse *response);

/**
 * gobjdebug_debug_service_flutter_api_get_hostname_response_get_error_details:
 * @response: a #GobjdebugDebugServiceFlutterApiGetHostnameResponse.
 *
 * Get the error details for this response.
 *
 * Returns: (allow-none): an error details or %NULL.
 */
FlValue *gobjdebug_debug_service_flutter_api_get_hostname_response_get_error_details(GobjdebugDebugServiceFlutterApiGetHostnameResponse *response);

/**
 * GobjdebugDebugServiceFlutterApi:
 *
 */

G_DECLARE_FINAL_TYPE(GobjdebugDebugServiceFlutterApi, gobjdebug_debug_service_flutter_api, GOBJDEBUG, DEBUG_SERVICE_FLUTTER_API, GObject)

/**
 * gobjdebug_debug_service_flutter_api_new:
 * @messenger: an #FlBinaryMessenger.
 * @suffix: (allow-none): a suffix to add to the API or %NULL for none.
 *
 * Creates a new object to access the DebugServiceFlutterApi API.
 *
 * Returns: a new #GobjdebugDebugServiceFlutterApi
 */
GobjdebugDebugServiceFlutterApi *gobjdebug_debug_service_flutter_api_new(FlBinaryMessenger *messenger, const gchar *suffix);

/**
 * gobjdebug_debug_service_flutter_api_get_hostname:
 * @api: a #GobjdebugDebugServiceFlutterApi.
 * @response: parameter for this method.
 * @cancellable: (allow-none): a #GCancellable or %NULL.
 * @callback: (scope async): (allow-none): a #GAsyncReadyCallback to call when the call is complete or %NULL to ignore the response.
 * @user_data: (closure): user data to pass to @callback.
 *
 */
void gobjdebug_debug_service_flutter_api_get_hostname(GobjdebugDebugServiceFlutterApi *api, const gchar *response, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);

/**
 * gobjdebug_debug_service_flutter_api_get_hostname_finish:
 * @api: a #GobjdebugDebugServiceFlutterApi.
 * @result: a #GAsyncResult.
 * @error: (allow-none): #GError location to store the error occurring, or %NULL to ignore.
 *
 * Completes a gobjdebug_debug_service_flutter_api_get_hostname() call.
 *
 * Returns: a #GobjdebugDebugServiceFlutterApiGetHostnameResponse or %NULL on error.
 */
GobjdebugDebugServiceFlutterApiGetHostnameResponse *gobjdebug_debug_service_flutter_api_get_hostname_finish(GobjdebugDebugServiceFlutterApi *api, GAsyncResult *result, GError **error);

G_END_DECLS

#endif // PIGEON_DEBUG_SERVICE_G_H_
